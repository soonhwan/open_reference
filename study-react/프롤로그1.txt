크게 2가지 이유로
사용을 하고
둘다 어려워요
1. 빠르다
2. MVC 디자인패턴으로 해결이 안된다
이 큰 2가지의 문제를 해결하기 위해
1번은 문제라기보단


문제는 동적인웹이 느리다
가 문제겠네
1. 동적인웹은 느리다
2. MVC 패턴으로 해결안되는 문제가 생긴다(상태관리가 많아질 시 )
2번은 내용이 길어지니
오늘은 1번만 맛배기로
프롤로그 1
내일은 프롤로그 2


javascript는
jquery 마찬가지
dom을 조작하면서
본격적으로 자기의 행동을 시작해요 웹에서
$('#a').append(<div>)
이런 간단한 로직을 하나 javascript가
동적으로 수행하게 되면
브라우저는


현재 보여지는 DOM 을 다시한번 갱신을 하게되고
DOM이 갱신되면
css가 다시 그려져요
css는 paint ,reandering 
등의 과정을 브라우저를 통해 다시 수행하고


이 css가 저 행위를 수차례 반복하면
느려져요 
그래서 애초에 DOM을 갱신하는 행위자체를
javascript는 무조건 1회 수행시마다 다시 그려버리니
가상DOM을 만들어서
변하는 요소가 있을 시 가상 DOM에 반영하고


변하는 요소가 여러개일 시
다 취합해서
한번만 DOM에 올리는 형태로
속도를 개선하는게
react 의 방식이에요


그리고
이런 상황에서
$('.a').append(<div>) 
우리가 이렇게 클래스로 선언한 a 한테
div를 어펜드 시켜버리면
저 요소 하나하나를 찾아내서
거길 바꾸죠?


javascript나 jquery는
저길 찾아서 변경하고
react는
저 부분의 상위 div 같은곳을 찾아서
통째로 소스를 교체해버립니다.
얼핏보면 전자가 더 좋을거 같은데
당연히 react에서 후자가 더 좋게 만들어 놨으니 빠르겠죠


일단 이런 상태적인 특성이 있기때문에
react는 dom에 접근하는 방식으로
기존jquery처럼
뭘 찾아서 교체한다
이런 개념이 아니라
덩어리를 통째로 갈아낀다
라는 개념으로 접근해야되요


그 덩어리는 component 라는 명칭으로
react는 component를 조립하는
테트리스 게임을 하는 애다









